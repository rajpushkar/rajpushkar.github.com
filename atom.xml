<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Pushkar Raj's Blog]]></title>
  <link href="http://rajpushkar.github.io/atom.xml" rel="self"/>
  <link href="http://rajpushkar.github.io/"/>
  <updated>2014-05-25T23:21:38+05:30</updated>
  <id>http://rajpushkar.github.io/</id>
  <author>
    <name><![CDATA[Mehandiratta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LAMP on Fedora]]></title>
    <link href="http://rajpushkar.github.io/blog/2014/05/25/lamp-on-fedora/"/>
    <updated>2014-05-25T22:29:00+05:30</updated>
    <id>http://rajpushkar.github.io/blog/2014/05/25/lamp-on-fedora</id>
    <content type="html"><![CDATA[<p>To install LAMP on fedora just follow the following steps and within few minutes you will be ready with the LAMP stack on your system.</p>

<p>Step.1: We must install the updates first:</p>

<pre><code>sudo yum update
</code></pre>

<br>    


<p>Step.2: Installing Apache:</p>

<pre><code>sudo yum install httpd
</code></pre>

<p>The Apache service can be started by running</p>

<pre><code>sudo service httpd start
</code></pre>

<br>


<p>Step.3: Installing MySQL:</p>

<pre><code>sudo yum install mysql mysql-server
</code></pre>

<p>To Start MySQL</p>

<pre><code>sudo service mysqld start
</code></pre>

<br>


<p>Step.4: Installing PHP</p>

<pre><code>sudo yum install php php-mysql
</code></pre>

<br>


<p>To check whether LAMP is correctly installed and working make a file <strong>info.php</strong> inside the /var/www/html directory</p>

<pre><code>sudo vi /var/www/html/info.php
</code></pre>

<p>and paste the following lines into it and save it</p>

<pre><code>&lt;?php
phpinfo();
?&gt;
</code></pre>

<p>Now restart the Apache</p>

<pre><code>sudo service httpd restart
</code></pre>

<p>Now in the browser enter the URL of your info.php file i.e</p>

<pre><code>http://localhost/info.php
</code></pre>

<p>You should see the info page on the browser.</p>

<p>The LAMP stack has, now, been installed on your system.</p>

<br>


<p>If you want to configure the root password for MySQL run the following command</p>

<pre><code>sudo /usr/bin/mysql_secure_installation
</code></pre>

<p>This prompts you to enter the current root password, just leave it blank by pressing enter as you have just installed MySQL and no root password has been set yet.
Next the prompt asks you whether you want to set a root password, enter y and follow the instructions.
In the next few steps it will ask you the following questions</p>

<pre><code>Remove anonymous users? [Y/n]
Disallow root login remotely? [Y/n]
Remove test database and access to it? [Y/n]
Reload privilege tables now? [Y/n]
</code></pre>

<p>Just enter Y for all the questions.
If all done, you have successfully setup new root password and your MySQL installation is now secure.</p>

<p>Now restart the Apache and Mysql services</p>

<pre><code>sudo service httpd restart
sudo service mysqld restart
</code></pre>

<br>


<p>To run the services on the startup run the following commands(PHP automatically starts when tha Apache starts):</p>

<pre><code>sudo chkconfig httpd on
sudo chkconfig mysqld on
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The simplest YUM guide]]></title>
    <link href="http://rajpushkar.github.io/blog/2014/04/13/the-simplest-yum-guide/"/>
    <updated>2014-04-13T02:20:00+05:30</updated>
    <id>http://rajpushkar.github.io/blog/2014/04/13/the-simplest-yum-guide</id>
    <content type="html"><![CDATA[<p>Hi! This post will make you familiar with the YUM utility provided with Fedora.
You can easily download, install or remove any package/module after going through this easy YUM guide.
Taking you directly to the commands, If you want to search for a module:</p>

<pre><code>yum search &lt;module name&gt;
</code></pre>

<p>To get information about a module:</p>

<pre><code>yum info &lt;module name&gt;
</code></pre>

<p>To install a module:</p>

<pre><code>sudo yum install &lt;module name&gt;
</code></pre>

<p>To remove a module:</p>

<pre><code>sudo yum remove &lt;module name&gt;
</code></pre>

<p>To check for updates:</p>

<pre><code>yum check update
</code></pre>

<p>To install updates;</p>

<pre><code>sudo yum update
</code></pre>

<p>To update a single module:</p>

<pre><code>yum update &lt;module name&gt;
</code></pre>

<p>excluding a module from being updated:</p>

<pre><code>yum --exclude=package &lt;module name&gt; updated
</code></pre>

<p>To find out the dependencies of a module</p>

<pre><code>yum deplist &lt;module name&gt;
</code></pre>

<br>


<p>To uninstall a module:</p>

<pre><code>yum remove &lt;module name&gt;
or
yum erase &lt;module name&gt;
</code></pre>

<p>To search for a module which can be directly installed using YUM</p>

<pre><code>yum list | grep &lt;module name&gt;
</code></pre>

<p>To find whether a module has been installed or not:</p>

<pre><code>yum list installed | grep &lt;module name&gt;
</code></pre>

<p>If in the output you see the package listed then it is installed else there will be no output.</p>

<br>


<br>


<p>To install a yum group. Say I want to install the group of editors</p>

<pre><code>yum groupinstall editors
</code></pre>

<p>To remove the editors yum group</p>

<pre><code>yum groupremove editors
</code></pre>

<p>To update a yum group:</p>

<pre><code>yum groupupdate &lt;group name&gt;
</code></pre>

<p>To list packages in a YUM group:</p>

<pre><code>yum groupinfo &lt;group-name&gt;
</code></pre>

<p>To list YUM groups:</p>

<pre><code>yum grouplist | less 
</code></pre>

<br>


<br>


<p>To know the kernel-images currently installed:</p>

<pre><code>rpm -q kernel
</code></pre>

<p>To remove old kernels:</p>

<pre><code>sudo yum remove kernel
</code></pre>

<p>Fedora retains the three latest kernels to ensure that there is always a working kernel installed, in case the latest kernel breaks something.
The limit can be changed by changing the value of &lsquo;installonly_limit&rsquo; in the &lsquo;/etc/yum.conf&rsquo; file.</p>

<p>To remove a specific kernel:</p>

<pre><code>sudo yum remove &lt;kernel package&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating a WiFi Hostspot in Windows]]></title>
    <link href="http://rajpushkar.github.io/blog/2014/04/07/creating-a-wifi-hostspot-in-windows/"/>
    <updated>2014-04-07T23:32:00+05:30</updated>
    <id>http://rajpushkar.github.io/blog/2014/04/07/creating-a-wifi-hostspot-in-windows</id>
    <content type="html"><![CDATA[<p>Hi! This post will tell you how to create a WiFI hotspot from your Windows 7 Laptop/PC.</p>

<br>


<p>It is very easy to set up your PC/Laptop as a Virtual Router. First of all you need to check whether your network card support this feature or not. To check run cmd.exe with administrator privileges and type in following command:</p>

<pre><code>netsh wlan show drivers
</code></pre>

<p>If in the output there is a line saying</p>

<pre><code>Hosted network supported : yes
</code></pre>

<p>then you are lucky and all set to go.</p>

<br>


<p>Now in the command prompt run the following command to configure the Virtual Router</p>

<pre><code>netsh wlan set hostednetwork mode=allow ssid=&lt;network ssid&gt; key=&lt;password&gt; keyUsage=persistent
</code></pre>

<p>The parameter keyusage which is set to persistent is required so that your system remembers the password set for the network created even after you reboot your system.</p>

<br>


<p>Now to start the network just type in the following command in the command prompt:</p>

<pre><code>netsh wlan start hostednetwork
</code></pre>

<p>and you are done. You have just converted your PC into a Virtual Router.
But before you can actually use your Hotspot network to access the internet you have to do one more step which is to allow your original Wi-Fi network be accessed by other devices for which you need to go to wireless properties and under the sharing tab enable the option saying &ldquo;Allow other devices to connect to this network&rdquo;</p>

<br>


<p>To see the information of the Hostednetwork run the following command:</p>

<pre><code>netsh wlan show hostednetwork
</code></pre>

<p>and to stop the hostednetwork:</p>

<pre><code>netsh wlan stop hostednetwork
</code></pre>

<p>You can also change the password of your network by just typing a simple command:</p>

<pre><code>netsh wlan refresh hostednetwork &lt;newpassword&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to install LAMP on Ubuntu]]></title>
    <link href="http://rajpushkar.github.io/blog/2014/04/04/how-to-install-lamp-on-ubuntu/"/>
    <updated>2014-04-04T00:45:00+05:30</updated>
    <id>http://rajpushkar.github.io/blog/2014/04/04/how-to-install-lamp-on-ubuntu</id>
    <content type="html"><![CDATA[<p>To install LAMP on Ubuntu just follow the following easy steps.</p>

<p>Step1. Install Apache</p>

<pre><code>sudo apt-get install apache2
</code></pre>

<p>To verify that apache has been successfully installed or not type in the URL bar of the browser &ldquo;localhost&rdquo; and in the output you should see something like:</p>

<pre><code>It works!
This is the default web page for this server.
The web server software is running but no content has been added, yet.
</code></pre>

<br>


<p>Step2. Install MySQL on the server</p>

<pre><code>sudo apt-get install mysql-server
</code></pre>

<p>Now start the MySQL service</p>

<pre><code>sudo service mysql start
</code></pre>

<br>


<p>Step3. Install PHP</p>

<pre><code>sudo apt-get install php5 libapache2-mod-php5
</code></pre>

<p>Now to test the PHP installation make a test.php file in /var/www/ directory and copy the following contents in the file and save it</p>

<pre><code>&lt;?php
phpinfo();
?&gt;
</code></pre>

<p>Now restart the apache service</p>

<pre><code>sudo service apache2 restart
</code></pre>

<p>and open a browser and type in the URL bar</p>

<pre><code>localhost/test.php
</code></pre>

<p>which should display the information page of the PHP installed on the system.</p>

<br>


<p>Step4. Now if you want to install PHPMyAdmin</p>

<pre><code>sudo apt-get install phpmyadmin
</code></pre>

<p>Configure it as follows:</p>

<pre><code>*Select apache2 as the web-server
*Choose yes when asked for whether you want to configure the database for phpmyadmin with dbconfig-common
* Enter your MySQL password when prompted
* Enter the password that you want to use to log into phpmyadmin
</code></pre>

<p>After the installation completes add the phpmyadmin to the apache2.conf file as follows</p>

<pre><code>sudo vim /etc/apache2/apache2.conf
</code></pre>

<p>and add the following line in the file</p>

<pre><code>Include /etc/phpmyadmin/apache.conf
</code></pre>

<p>Now restart apache</p>

<pre><code>sudo service apache2 restart
</code></pre>

<p>and you are all done!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Generating SSH keys]]></title>
    <link href="http://rajpushkar.github.io/blog/2014/02/12/generating-ssh-keys/"/>
    <updated>2014-02-12T00:55:00+05:30</updated>
    <id>http://rajpushkar.github.io/blog/2014/02/12/generating-ssh-keys</id>
    <content type="html"><![CDATA[<p>First you must look for whether there is already an existing SSH key on your system or not.
To check do the following:</p>

<pre><code>cd ~/.ssh
ls -al
</code></pre>

<p>Check the listing for a file named <strong>id_rsa.pub</strong> or <strong>id_dsa.pub</strong>. If a file with such name exists then you already have an SSH key for your system and if not then run the following command in the terminal to generate one:</p>

<pre><code>ssh-keygen -t rsa -C "your_email@example.com"
</code></pre>

<p>Now it will prompt you to enter the file name in which to store the key, just press enter and the key will automatically be stored in the default file i.e <strong>~/.ssh/id_rsa.pub</strong>.</p>

<br>


<p>In the next prompt it asks you to enter the passphrase, it&rsquo;s your wish to leave it blank or provide one</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Libre Office Writer: How to write letters with diacritical marks]]></title>
    <link href="http://rajpushkar.github.io/blog/2013/09/27/diacriticalwriting/"/>
    <updated>2013-09-27T21:07:00+05:30</updated>
    <id>http://rajpushkar.github.io/blog/2013/09/27/diacriticalwriting</id>
    <content type="html"><![CDATA[<p>Hi! Today we were conducting the ICT Training at <a href="http://iic.ac.in">IIC, UDSC</a> which aims at promoting the use of Open-Source Softwares in the University and we were giving the Faculty hands-on with Ubuntu. There were many questions that arose out of the crowd and one out of them was how to write characters with <strong>diacritical marks</strong>(e.g ë, õ) in <strong>LibreOffice Writer</strong>. I found the question interesting as I got a new thing to explore. So I started searching for the solution and within few minutes I found one.</p>

<br>


<p>I am demonstrating the procedure below:</p>

<br>


<p>First of all go <a href="http://extensions.services.openoffice.org/fr/project/ComposeSpecialCharacters">here</a> and download the extension or directly download it from <a href="http://extensions.services.openoffice.org/fr/download/4646">here</a></p>

<br>


<p>Now Open the LibreOffice Writer and go to the <i>tools</i> tab and select <i>Extension manager.</i>
<img src="http://rajpushkar.github.io/images/Snapshot1.png"></p>

<br>


<p>The following window will appear which prompts you to add an extension.
<img src="http://rajpushkar.github.io/images/Snapshot2.png">
Click on <i>Add</i> and go to the directory where the file has been downloaded, select the file and click <i>Open</i> as demonstrated below.
<img src="http://rajpushkar.github.io/images/Snapshot3.png">
Now the <i>Extension Software License Agreement</i> Window will appear you will see the <i>Accept</i> button is disabled. Scroll till end and it will become active, click Accept and close the next window that appears.
<img src="http://rajpushkar.github.io/images/Snapshot4.png">
<img src="http://rajpushkar.github.io/images/Snapshot5.png">
Now close and relaunch the LibreOffice Writer and you can see that a new option named <i>Compose Character</i> appears under the <i>Insert</i> tab.
<img src="http://rajpushkar.github.io/images/Snapshot6.png">
On clicking the compose character option you will see a window(shown below) appearing on your screen that displays the information on how to use the keyboard shortcuts to enter the special characters on the editor. But before using the shortcuts you need to set the CSC(Compose Special Character) Shortcut key-combination.
<img src="http://rajpushkar.github.io/images/Snapshot7.png">
Click on the CSC Shortcut tab and you will be greeted with a new window that prompts you to set a key-combination for composing special characetrs.
<img src="http://rajpushkar.github.io/images/Snapshot8.png">
Here, as you can see, I have chosen the <strong>alt+F3</strong> key-combination, you can choose any combination like <strong>shift+F2, alt+ctrl+m, ctrl+g</strong> but make sure the combination you choose should not conflict with any other shortcut already defined for the editor.
Click <i>OK</i> and also on the next two windows that appear click <i>OK</i>
<img src="http://rajpushkar.github.io/images/Snapshot9.png">
<img src="http://rajpushkar.github.io/images/Snapshot10.png">
Now the following window shows you the key-pair to use for writing the words with diacritical marks.
<img src="http://rajpushkar.github.io/images/Snapshot11.png">
Suppose you want to write &ldquo;Ø&rdquo; then as shown first you have to type &ldquo;O/&rdquo; and then you need to press the CSC key-combination set by you, which in my case is <strong>alt+F3</strong>
Simillarly to type any other character just look for its key-pair value and then afte typing in the key-pair value press your CSC key and you are done.
As simple as that!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Operate Octopress Blog from multiple places]]></title>
    <link href="http://rajpushkar.github.io/blog/2013/09/27/how-to-operate-octopress-blog-from-multiple-places/"/>
    <updated>2013-09-27T17:20:00+05:30</updated>
    <id>http://rajpushkar.github.io/blog/2013/09/27/how-to-operate-octopress-blog-from-multiple-places</id>
    <content type="html"><![CDATA[<p>Hi all! I have been using octopress blog for a couple of months now. I find it very interesting to work with. But a problem I used to face with Octopress is that I was unable to operate it from multiple machines. The complete setup was on my laptop and if I want to post anything onto the blog from a system in my institute, I can&rsquo;t.
As long as my laptop was serving my purpose I didn&rsquo;t bother but one day my hard-disk crashed and then I was left with no other option then finding a solution to operate the blog from multiple places.</p>

<br>


<p>I had the basic understanding as to what does different folders inside the octopress folder actually mean.</p>

<br>


<p>The octopress repository cotains two branches: <strong>Source</strong> and <strong>Master</strong>
The Source branch contains the files necessary to generate the blog and the actual blog is contained in the Master branch.
While configuring the blog initially the source branch is cloned into the folder named octopress and the files of the actual blog are cloned into the sub-folder named _deploy.</p>

<br>


<p>All the files and folders are pushed to the Source branch when we run the <strong>git push origin source</strong> command on terminal except the <strong>_deploy</strong> folder which contains the files of the actual blog and are pushed to master branch automatically when we run <strong>rake deploy</strong> command.</p>

<br>


<p>So the steps that I followed are as follows:</p>

<h2>Step.1</h2>

<p>I Cloned the Source branch to a local directory named Octopress:</p>

<pre><code>git clone -b source git@github.com:username/username.github.com.git octopress
</code></pre>

<h2>Step.2</h2>

<p>CD to the octopress directory just created and cloned the master branch into a directory named _deploy:</p>

<pre><code>git clone git@github.com:username/username.github.com.git _deploy
</code></pre>

<h2>Step.3</h2>

<p>Then I installed ruby as follows:</p>

<pre><code>curl -L https://get.rvm.io | bash -s stable --ruby
rvm install 1.9.3
rvm use 1.9.3
rvm rubygems latest
</code></pre>

<p>after this I configured everything according to the octopress guidelines:</p>

<pre><code>gem install bundler
bundle install
rake setup_github_pages
</code></pre>

<p>This prompted me to enter read/write URL for my blog</p>

<pre><code>Enter the read/write url for your repository
(For example, 'git@github.com:username/username.github.com)
</code></pre>

<p>Here I have omitted the step <strong>rake install</strong> because it installs the default theme to the octopress and there was already a theme installed on my blog. If you want to install the default octopress theme then run the command <strong>rake install</strong> before running <strong>rake setup_github_pages</strong></p>

<br>


<p>That&rsquo;s it. Now I have a complete copy of my octopress blog.
Now I can do whatever I like as i used to do before loosing my blog.</p>

<p><strong>If you want to operate your blog from multiple places</strong> you just need to setup a copy of your blog locally on all the machines and then before making changes from any machine do the following:</p>

<br>


<p>Go to the <strong>octopress</strong> directory and pull the <strong>source</strong> branch:</p>

<pre><code>cd /path/to/octopress/directory
git pull origin source
</code></pre>

<p>Go to the <strong>_deploy</strong> directory and pull the <strong>master</strong> branch:</p>

<pre><code>cd _deploy
git pull origin master
</code></pre>

<p>Make changes and push:</p>

<pre><code>git add .
git commit -m "your message"
git push origin source
</code></pre>

<p>Deploy:</p>

<pre><code>rake generate
rake deploy
</code></pre>

<p>That&rsquo;s it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grub Recovery after installing Windows]]></title>
    <link href="http://rajpushkar.github.io/blog/2013/09/26/grub-recovery-after-installing-windows/"/>
    <updated>2013-09-26T02:03:00+05:30</updated>
    <id>http://rajpushkar.github.io/blog/2013/09/26/grub-recovery-after-installing-windows</id>
    <content type="html"><![CDATA[<p>Many of us face the problem to boot to ubuntu when we install Windows over it as the system directly boots to windows on startup.
So what to do this in case?How to recover the grub so that we can boot to the OS we want and not what the system wants.
Here is a simple solution for the problem.</p>

<h2>Step.1</h2>

<p>Insert the Ubuntu Live CD, reboot your computer and at startup set your system to boot from CD and start a live session.<br>
Live USB can also be used for this purpose.</p>

<h2>Step.2</h2>

<p>Open Terminal. Make sure you are connected to the internet.
Now install boot-repair following the below mentioned steps:</p>

<pre><code>sudo add-apt-repository ppa:yannubuntu/boot-repair
sudo apt-get update
sudo apt-get install boot-repair
</code></pre>

<p>The boot-repair has successfully been installed to your system now.</p>

<h2>Step.3</h2>

<p>Now run boot-repair. For those who do not know how to run a program in Ubuntu, press super key(windows key is called super key in Ubuntu), a dash menu will appear, type-in boot-repair and run the program.</p>

<p>You can also run it by simply running the command <strong>&lt;boot-repair &amp;></strong> in the terminal.</p>

<h2>Step.4</h2>

<p>Now boot-repair menu will appear on the screen click on the <strong>Recommended Repair</strong>, wiat for the process to complete and restart your computer.<br>
Whoa! The GRUB menu has been successfully recovered.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to install Prezi on Ubuntu]]></title>
    <link href="http://rajpushkar.github.io/blog/2013/06/21/prezionubuntu/"/>
    <updated>2013-06-21T18:08:00+05:30</updated>
    <id>http://rajpushkar.github.io/blog/2013/06/21/prezionubuntu</id>
    <content type="html"><![CDATA[<h3>First of all install Adobe-Air.</h3>


<p>Step.1: Download <a href="http://airdownload.adobe.com/air/lin/download/2.6/AdobeAIRInstaller.bin">Adobe-Air-2.6</a></p>

<br>


<p>Step.2: Download <a href="http://jeffhendricks.net/getlibs-all.deb">getlibs-all.deb</a></p>

<br>


<p>Step.3: Install it. In terminal cd, to the directory you stored &ldquo;getlibs-all.deb&rdquo; and run the following command.</p>

<pre><code>sudo dpkg -i getlibs-all.deb
</code></pre>

<p>It is useful for finding 32-bit libraries for 64-bit system.</p>

<br>


<p>Step.4: Now install libhal-storage1, lib32nss-mdns, and libgnome-keyring0 if it&rsquo;s not installed.</p>

<pre><code>sudo apt-get install libhal-storage1 libgnome-keyring0 lib32nss-mdns
</code></pre>

<br>


<p>Step.5: Now, we need to install all the missing 32-bit libraries that it will need.</p>

<pre><code>sudo getlibs -l libhal-storage.so.1
sudo getlibs -l libgnome-keyring.so.0.1.1
</code></pre>

<br>


<p>Step.6: Now you need to link a couple of libraries.</p>

<pre><code>sudo ln -s /usr/lib/i386-linux-gnu/libgnome-keyring.so.0 /usr/lib/libgnome-keyring.so.0
</code></pre>

<br>


<p>Step.7: Now run the actual Air installer. In terminal cd, to the directory you stored &ldquo;AdobeAIRInstaller.bin&rdquo; and run the following command.</p>

<pre><code>chmod +x ./AdobeAIRInstaller.bin
sudo ./AdobeAIRInstaller.bin
</code></pre>

<p>This starts installing the Adobe-AIR on your system.</p>

<br>




<h3>Now install Prezi</h3>


<p>Step.1: Download the <a href="http://cdn01.prezi.com/prezi/desktop/PreziDesktop_3.090.air">Prezi</a> package.</p>

<br>


<p>Step.2: Open Adobe-Air in your computer and it will prompt you to choose a package.</p>

<br>


<p>Step.3: Select the downloaded &ldquo;.air&rdquo; package that you just downloaded and you are all set to install Prezi.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TP-Link TL-WR702N Router Configuration Settings]]></title>
    <link href="http://rajpushkar.github.io/blog/2013/06/07/tplink/"/>
    <updated>2013-06-07T16:26:00+05:30</updated>
    <id>http://rajpushkar.github.io/blog/2013/06/07/tplink</id>
    <content type="html"><![CDATA[<p>There are five modes in which the router can be configured:</p>

<ol>
<li>Wireless Access-Point(AP) Mode
<li>Client Mode
<li>Repeater Mode
<li>Router Mode
<li>Bridge Mode
</ol>


<p><strong><em>Wireless Access Point(AP) Mode:</em></strong>
<dd>The router is connected to a wired network and transforms the wired internet access into wireless so that multiple devices can share the internet.</dd></p>

<p><img src="http://rajpushkar.github.io/images/apmode.jpeg" width="400" height="400" title="AP-Mode &#34;Image Describing the AP Mode&#34;" alt="AP-Mode &#34;Image Describing the AP Mode&#34;"></p>

<br>


<p><strong><em>Client Mode:</em></strong>
<dd>The device is connected to another device via ethernet card and acts as an adapter to send/receive the wireless signal from your wireless network</dd></p>

<p><img src="http://rajpushkar.github.io/images/client.jpeg" width="400" height="400" title="Client-Mode &#34;Image Describing the Client Mode&#34;" alt="Client-Mode &#34;Image Describing the Client Mode&#34;"></p>

<br>


<p><strong><em>Repeater Mode:</em></strong>
<dd>The device copies and reinforces the existing wireless signal to extend the coverage of the signal. So the network name(SSID) and password don&rsquo;t change. This mode is especially useful for a large space to eliminate signal-blind corners.</dd></p>

<p><img src="http://rajpushkar.github.io/images/repeater.jpeg" width="400" height="400" title="Repeater-Mode &#34;Image Describing the Repeater Mode&#34;" alt="Repeater-Mode &#34;Image Describing the Repeater Mode&#34;"></p>

<br>


<p><strong><em>Router Mode:</em></strong>
<dd>The device is connected to a DSL or cable modem and works as a Regular Wireless Router</dd></p>

<p><img src="http://rajpushkar.github.io/images/router.jpeg" width="400" height="400" title="Router-Mode &#34;Image Describing the Router Mode&#34;" alt="Router-Mode &#34;Image Describing the Router Mode&#34;"></p>

<br>


<p><strong><em>Bridge Mode:</em></strong>
<dd>The device borrows existing wireless internet and broadcasts it using a different network name(SSID) and password</dd></p>

<p><img src="http://rajpushkar.github.io/images/bridge.jpeg" width="400" height="400" title="Bridge-Mode &#34;Image Describing the Bridge Mode&#34;" alt="Bridge-Mode &#34;Image Describing the Bridge Mode&#34;"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Advanced Packaging Tool]]></title>
    <link href="http://rajpushkar.github.io/blog/2013/06/02/apt/"/>
    <updated>2013-06-02T00:31:00+05:30</updated>
    <id>http://rajpushkar.github.io/blog/2013/06/02/apt</id>
    <content type="html"><![CDATA[<p><em>Advanced Packaging Tool is a user interface that lets the user install and remove packages/softwares on Debian/GNU Linux Distributions.</em></p>

<h2>Searching for Packages</h2>

<p>To search for a software/package in the repositories run the following command in the terminal</p>

<pre><code>apt-cache search &lt;search-term&gt;|less
</code></pre>

<p>less is used for a better navigation through the output list</p>

<h2>Adding Repositories</h2>

<p>To add the repository run the following command</p>

<pre><code>sudo add-apt-repository &lt;repository name&gt;
</code></pre>

<p>Manually the repositories can be added or changed by editing APTs source file</p>

<pre><code>sudo vi /etc/apt/sources.list
</code></pre>

<h2>Updating Sources</h2>

<p>After adding repositories, the Package List has to be updated</p>

<pre><code>sudo apt-get update
</code></pre>

<p>This will update the package list from all repositories in one go.
Remember to do this after every added repository</p>

<h2>Installation</h2>

<p>Now that you have added the software repository and updated your package list, and found the package name you need, you can install it by running the following command</p>

<pre><code>sudo apt-get install &lt;Package Names&gt;
</code></pre>

<p>This will download and install all of the packages mentioned.If there are dependencies-other prerequisite packages-they will also be installed</p>

<h2>Removing Packages</h2>

<p>To get rid of a program run the following command</p>

<pre><code>sudo apt-get remove &lt;Package Name&gt;
</code></pre>

<p>To get rid of the configuration files and associated directories as well</p>

<pre><code>sudo apt-get --purge remove &lt;Package Name&gt;
</code></pre>

<h2>Checking What is Installed</h2>

<p>A list of all the installed packages can be seen by</p>

<pre><code>sudo dpkg --list
</code></pre>

<p>To search through the list use the grep command</p>

<pre><code>sudo dpkg --list|grep &lt;search term&gt;
</code></pre>

<p>If you want to know whether the particular package has been installed or not</p>

<pre><code>dpkg -s &lt;Package Name&gt;
</code></pre>
]]></content>
  </entry>
  
</feed>
